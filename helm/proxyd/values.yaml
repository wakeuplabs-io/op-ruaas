proxyd:
  image:
    repository: local/proxyd
    tag: latest
  service:
    type: ClusterIP
    port: 8080
  config:
    configFile: |
      # proxyd.toml
      ws_method_whitelist = [
        "eth_subscribe",
        "eth_call",
        "eth_chainId"
      ]
      ws_backend_group = "main"

      [server]
      rpc_host = "0.0.0.0"
      rpc_port = 8080
      ws_host = "0.0.0.0"
      ws_port = 8085
      max_body_size_bytes = 10485760
      max_concurrent_rpcs = 1000
      log_level = "info"

      [redis]
      url = "redis://{{ .Values.redis.service.name }}:{{ .Values.redis.service.port }}"

      [metrics]
      enabled = true
      host = "{{ .Values.prometheus.service.name }}"
      port = "{{ .Values.prometheus.service.name }}" # 9761

      [backend]
      response_timeout_seconds = 5
      max_response_size_bytes = 5242880
      max_retries = 3
      out_of_service_seconds = 600
      max_latency_threshold = "30s"
      max_degraded_latency_threshold = "10s"
      max_error_rate_threshold = 0.3

      [backends]
      [backends.infura]
      rpc_url = "$RPC_URL_INFURA"
      ws_url = "$WS_URL_INFURA"
      username = "${INFURA_USERNAME}"
      password = "${INFURA_PASWORD}"
      max_rps = 3
      max_ws_conns = 1
      ca_file = ""
      client_cert_file = ""
      client_key_file = ""
      consensus_receipts_target = "eth_getBlockReceipts"

      [backends.alchemy]
      rpc_url = "$RPC_URL_ALCHEMY"
      ws_url = "$WS_URL_ALCHEMY"
      username = "${ALCHEMY_USERNAME}"
      password = "${ALCHEMY_PASSWORD}"
      max_rps = 3
      max_ws_conns = 1
      consensus_receipts_target = "alchemy_getTransactionReceipts"

      [backend_groups]
      [backend_groups.main]
      backends = ["infura"]

      [backend_groups.alchemy]
      backends = ["alchemy"]

      [authentication]
      secret = "test"

      [rpc_method_mappings]
      eth_call = "main"
      eth_chainId = "main"
      eth_blockNumber = "alchemy"

  secrets:
    alchemyUsername: ""        
    alchemyPassword: ""
    infuraUsername: ""
    infuraPassword: ""

redis:
  image:
    repository: redis
    tag: latest
  service:
    name: redis
    type: ClusterIP
    port: 6379
