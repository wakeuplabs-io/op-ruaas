apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.geth.name }}-replica-deployment
  labels:
    app: {{ .Values.geth.name }}-replica
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.geth.name }}-replica
  template:
    metadata:
      labels:
        app: {{ .Values.geth.name }}-replica
    spec:
      containers:
        - name: {{ .Values.geth.name }}-replica
          image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: [ "sh", "/app/data/scripts/entrypoint.sh" ]
          ports:
            - containerPort: {{ .Values.geth.ports.rpc }}
            - containerPort: {{ .Values.geth.ports.ws }}
            - containerPort: {{ .Values.geth.ports.rpcAuth }}
            - containerPort: {{ .Values.geth.ports.metrics }}
          resources:
            requests:
              memory: "4Gi" # 16Gi
              cpu: "2" # 4
            limits:
              memory: "8Gi" # 32Gi optimal
              cpu: "4" # 8 optimal
          volumeMounts:
            - name: datadir
              mountPath: /app/data/datadir
            - name: configurations
              mountPath: /app/data/configurations
            - name: configuration-scripts
              mountPath: /app/data/scripts
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: {{ .Values.geth.name }}-replica-pvc-datadir
        - name: configurations
          persistentVolumeClaim:
            claimName: configurations-pvc
        - name: configuration-scripts
          configMap:
            name: geth-replica-scripts