domain:
  host: localhost # demo.example.com
  email: email@email.com

global:
  image:
    pullPolicy: IfNotPresent

chain:
  id: 10 # figure out how to take it from files, but files are ziped
  l1Rpc: "<L1 eth RPC URL>"
  artifacts: "config/artifacts.zip"
  addresses: "config/addresses.json"

geth:
  name: op-geth
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth
    tag: v1.101315.3
  deployment:
    replicaCount: 1
  ports:
    rpc: 8545 # != optimism docs: 9545
    ws: 8546 # != optimisms docs: 9546
    rpcAuth: 9551
    metrics: 7300

node:
  name: op-node
  image:
    repository: matzapata/op-node
    tag: latest
  config:
    p2pEnabled: false
  ports:
    rpc: 7545 # != optimism docs: 8547
    p2p: 9222
    metrics: 7300

batcher:
  name: op-batcher
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher
    tag: v1.9.4
  config:
    privateKey: ""
  ports:
    rpc: 6545 # != optimism docs: 8548
    metrics: 7300

proposer:
  name: op-proposer
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer
    tag: v1.9.4
  config:
    privateKey: ""
  ports:
    rpc: 5545 # != optimism docs: 8560
    metrics: 7300

proxyd:
  name: proxyd
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/proxyd
    tag: latest
  service:
    port: 8080
    targetPort: 8080
  ingress:
    nodePath: /rpc
  config:
    rpc_url_alchemy: "https://opt-sepolia.g.alchemy.com/v2/..."
    ws_url_alchemy: "wss://opt-sepolia.g.alchemy.com/v2/..."
  redis:
    name: proxyd-redis
    image:
      repository: redis
      tag: latest

explorer:
  enabled: true

monitoring:
  enabled: false

kube-prometheus-stack:
  grafana:
    ingress:
      enabled: true
      ingressClassName: nginx
      paths:
        - /grafana
      hosts:
        - "localhost"
  prometheus:
    serviceAccount:
      name: "" # prometheus
  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false # Workaround for Error: path / is mounted on / but it is not a shared or slave mount
      mountPropagation: HostToContainer

blockscoutStack:
  postgres:
    dbName: bs
    user: bs-db-user
    password: bs-db-password
    image:
      repository: postgres
      tag: latest

blockscout-stack:
  blockscout:
    ingress:
      enabled: true
      className: nginx
      hostname: localhost
    env:
      ECTO_USE_SSL: "false"
      ETHEREUM_JSONRPC_VARIANT: "geth"
      ETHEREUM_JSONRPC_HTTP_URL: "http://op-geth-replica-service:8545"
      ETHEREUM_JSONRPC_WS_URL: "ws://op-geth-replica-service:8546"
      NETWORK: "Optimism"
      CHAIN_ID: "10"
      DATABASE_URL: "ecto://bs-db-user:bs-db-password@blockscout-postgres-service:5432/bs" # secret would be nicer
  frontend:
    ingress:
      enabled: true
      className: nginx
      hostname: localhost
      paths:
        # - path: /explorer # fails because it doesn't change web app base url, couldn't fix yet
        - path: /
          pathType: Prefix
