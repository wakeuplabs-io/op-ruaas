domain:
  host: localhost # demo.example.com
  email: email@email.com


global:
  image:
    pullPolicy: IfNotPresent

chain:
  l1Rpc: "<L1 eth RPC URL>"
  artifacts: "config/artifacts.zip"

geth:
  name: op-geth
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth
    tag: v1.101408.0
  deployment:
    replicaCount: 2

node:
  name: op-node
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node
    tag: v1.3.1
  config:
    privateKey: ""
    p2pEnabled: false

batcher:
  name: op-batcher
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher
    tag: v1.9.4
  config:
    privateKey: ""

proposer:
  name: op-proposer
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer
    tag: v1.9.4
  config:
    privateKey: ""

proxyd:
  name: proxyd
  image:
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/proxyd
    tag: latest
  service:
    port: 8080
    targetPort: 8080
  ingress:
    path: /proxyd
  config:
    rpc_url_alchemy: "https://opt-sepolia.g.alchemy.com/v2/..."
    ws_url_alchemy: "wss://opt-sepolia.g.alchemy.com/v2/..."
  redis:
    name: proxyd-redis
    image:
      repository: redis
      tag: latest

explorer:
  enabled: false

monitoring:
  enabled: false

# TODO: is this required?
kube-prometheus-stack:
  grafana:
    ingress:
      enabled: true
      ingressClassName: nginx
      paths: 
        - /grafana
      hosts:
        - "localhost"
  prometheus:
    serviceAccount:
      name: "" # prometheus
  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false # Workaround for Error: path / is mounted on / but it is not a shared or slave mount
      mountPropagation: HostToContainer

# TODO: is this required?
blockscout-stack:
  blockscout:
    extraEnv:
      - name: ECTO_USE_SSL
        value: "false"
      - name: DATABASE_URL
        valueFrom:
          secretKeyRef:
            name: blockscout-secret
            key: DATABASE_URL
      - name: RPC_ADDR
        value: "op-node-replica"
      - name: RPC_PORT
        value: 7545
    
  frontend:
    ingress:
      enabled: true
      className: nginx
      paths: 
        - path: /explorer
      hostname: localhost
    extraEnv:
      - name: NEXT_PUBLIC_APP_HOST
        value: localhost
      - name: NEXT_PUBLIC_API_HOST
        value: localhost

blockscout:
  postgres:
    dbName: blockscout
    user: userShouldBeSet
    password: passwordShouldBeSet
    image:
      repository: postgres
      tag: latest
