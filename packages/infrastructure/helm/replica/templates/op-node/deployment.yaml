apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.node.name }}-replica-deployment
  labels:
    app: {{ .Values.node.name }}-replica
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.node.name }}-replica
  template:
    metadata:
      labels:
        app: {{ .Values.node.name }}-replica
    spec:
      initContainers:
        - name: genesis
          image: {{ .Values.node.image.repository }}:{{ .Values.node.image.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command:
            - sh
            - "-c"
            - |
              echo 'Generating l2 genesis and rollup configs'
              rm /app/data/configurations/rollup-config.json
              /usr/local/bin/op-node genesis l2 \
                  --l1-rpc {{ .Values.chain.l1Rpc }} \
                  --deploy-config /app/data/configurations/deploy-config.json \
                  --l2-allocs /app/data/configurations/allocs-l2.json \
                  --l1-deployments /app/data/configurations/addresses.json \
                  --outfile.l2 /app/data/configurations/genesis.json \
                  --outfile.rollup /app/data/configurations/rollup-config.json 
          volumeMounts:
            - name: configurations
              mountPath: /app/data/configurations
        - name: set-l1-genesis
          image: wakeuplabs/op-contracts:v1.0.0
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command:
            - sh
            - "-c"
            - |
              echo 'Processing JSON configurations with jq' 
              jq 'del(.config.optimism)' /app/data/configurations/genesis.json > temp.json && mv temp.json /app/data/configurations/genesis.json 
              jq 'del(.channel_timeout_granite)' /app/data/configurations/rollup-config.json > temp.json && mv temp.json /app/data/configurations/rollup-config.json 
              
              l1GenesisBlockNumber=$(jq '.genesis.l1.number' /app/data/configurations/rollup-config.json) 
              l1GenesisBlockHash=$(cast block $l1GenesisBlockNumber --rpc-url {{ .Values.chain.l1Rpc }} --json | jq -r ".hash") 
              jq --arg ts "$l1GenesisBlockHash" '.genesis.l1.hash = $ts' /app/data/configurations/rollup-config.json > tmp.json && mv tmp.json /app/data/configurations/rollup-config.json 
          volumeMounts:
            - name: configurations
              mountPath: /app/data/configurations
      containers:
        - name: {{ .Values.node.name }}-replica
          image: {{ .Values.node.image.repository }}:{{ .Values.node.image.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: [ "/usr/local/bin/op-node" ]
          args: 
            # Node-Specific Options
            # https://github.com/ethereum-optimism/optimism/blob/develop/op-node/flags/flags.go
            - "--l1={{ .Values.chain.l1Rpc }}"
            - "--l2=http://{{ .Values.geth.name }}-replica-service:{{ .Values.geth.ports.rpcAuth }}"
            - "--l2.jwt-secret=/app/data/configurations/jwt-secret.txt" 
            - "--verifier.l1-confs=0"
            - "--rollup.config=/app/data/configurations/rollup-config.json"
            - "--l1.rpckind=basic"
            - "--l1.trustrpc"
            # RPC Options
            # https://github.com/ethereum-optimism/optimism/blob/develop/op-service/rpc/cli.go
            - "--rpc.addr=0.0.0.0"
            - "--rpc.port={{ .Values.node.ports.rpc }}"
            # P2P Flags 
            # https://github.com/ethereum-optimism/optimism/blob/develop/op-node/flags/p2p_flags.go
            - "--p2p.disable"
            - "--p2p.listen.ip=0.0.0.0"
            - "--p2p.listen.tcp={{ .Values.node.ports.p2p }}"
            - "--p2p.listen.udp=0"
            - "--p2p.priv.path=/app/data/configurations/opnode_p2p_priv.txt"
            # Metrics Options
            # https://github.com/ethereum-optimism/optimism/blob/develop/op-service/metrics/cli.go
            {{- if .Values.monitoring.enabled }}
            - "--metrics.enabled"
            - "--metrics.addr=0.0.0.0"
            - "--metrics.port={{ .Values.node.ports.metrics }}"
            {{- end }}
          ports:
            - containerPort: {{ .Values.node.ports.rpc }}
            - containerPort: {{ .Values.node.ports.p2p }}
            - containerPort: {{ .Values.node.ports.metrics }}
          volumeMounts:
            - name: configurations
              mountPath: /app/data/configurations
      volumes:
        - name: configurations
          persistentVolumeClaim:
            claimName: {{ .Values.node.name }}-replica-pvc-configurations